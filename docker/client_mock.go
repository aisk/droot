// Automatically generated by MockGen. DO NOT EDIT!
// Source: client.go

package docker

import (
	go_dockerclient "github.com/fsouza/go-dockerclient"
	gomock "github.com/golang/mock/gomock"
)

// Mock of dockerclient interface
type Mockdockerclient struct {
	ctrl     *gomock.Controller
	recorder *_MockdockerclientRecorder
}

// Recorder for Mockdockerclient (not exported)
type _MockdockerclientRecorder struct {
	mock *Mockdockerclient
}

func NewMockdockerclient(ctrl *gomock.Controller) *Mockdockerclient {
	mock := &Mockdockerclient{ctrl: ctrl}
	mock.recorder = &_MockdockerclientRecorder{mock}
	return mock
}

func (_m *Mockdockerclient) EXPECT() *_MockdockerclientRecorder {
	return _m.recorder
}

func (_m *Mockdockerclient) RemoveContainer(opts go_dockerclient.RemoveContainerOptions) error {
	ret := _m.ctrl.Call(_m, "RemoveContainer", opts)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockdockerclientRecorder) RemoveContainer(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RemoveContainer", arg0)
}

func (_m *Mockdockerclient) CreateContainer(opts go_dockerclient.CreateContainerOptions) (*go_dockerclient.Container, error) {
	ret := _m.ctrl.Call(_m, "CreateContainer", opts)
	ret0, _ := ret[0].(*go_dockerclient.Container)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockdockerclientRecorder) CreateContainer(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateContainer", arg0)
}

func (_m *Mockdockerclient) ExportContainer(opts go_dockerclient.ExportContainerOptions) error {
	ret := _m.ctrl.Call(_m, "ExportContainer", opts)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockdockerclientRecorder) ExportContainer(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ExportContainer", arg0)
}
